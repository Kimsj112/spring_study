Spring MVC
스프링에서 클라이언트의 요청을 처리하는 모듈(부품)이다.

M odel : 클라이언트에게 응답으로 보내주는 작업 처리결과 데이터를 담당
V iew : 클라이언트 화면에 보여주는 리소스(자원)
C ontroller : 클라이언트의 요청을 직접적으로 전달받는 객체
		Model을  View에 전달하는 역할을 한다.



Spring MVC의 작업 흐름(그림을 참고)

- 스프링MVC에서 Dispatcher servlet이 Front Controller 역할을 한다.
- Controller를 Handler라고도 부른다.

1. 디스패쳐 서블릿이 요청을 받으면 Handler Mapping을 통해서 URL에 매핑된 컨트롤러를 찾는다.

2. 디스패쳐 서블릿이 핸들러 어댑터를 실행시킨다.

3. 핸들러 어댑터가 올바른 핸들러(컨트롤러)를 실행시키고 핸들러는 결과를 반환한다.

4. 핸들러 어댑터가 받은 결과를 ModelAndView객체로 변환하여 디스패쳐 서블릿에게 전달한다.
ModelAndView객체는 다음과 같은 정보를 담고있다.
- Model : 컨트롤러에서 처리한 데이터를 저장하는 객체(DB에서 가져온 정보 등)
- View : 클라이언트에게 보여줄 페이지의 이름을 저장하는 객체

5. 디스패쳐 서블릿이 받은 결과 중 어떤 view가 필요한지를 view Resolver에 전달한다.
   
6. 뷰 리졸버는 올바른 뷰를 찾아 디스패쳐 서블릿에게 알려준다.

7. View는 디스패쳐 서블릿에게 받은 Model 데이터로 html을 완성시켜 클라이언트에게 응답을 보낸다.



Spring MVC의 특징
- HttpServletRequest, HttpServletResponse를 거의 사용할 필요없이 구현 가능
- 다양한 타입의 파라미터, 다양한 타입의 리턴 사용이 가능
- GET, POST 등의 전송 방식에 대한 처리를 어노테이션으로 할 수 있다.











